{"version":3,"file":"YBCheckbox.stories-cd130c4b.js","sources":["../../managed/ui/node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../../managed/ui/node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../../managed/ui/node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../../managed/ui/node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../../managed/ui/src/redesign/components/YBCheckbox/YBCheckbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import React, { FC } from 'react';\nimport {\n  Typography,\n  FormControlLabel,\n  Checkbox,\n  CheckboxProps,\n  InputProps,\n  TypographyProps\n} from '@material-ui/core';\n\nexport interface YBCheckboxProps extends CheckboxProps {\n  label: React.ReactNode;\n  inputProps?: InputProps['inputProps']; // override type to make it accept custom attributes like \"data-testid\"\n  labelProps?: TypographyProps;\n}\n\nexport const YBCheckbox: FC<YBCheckboxProps> = ({\n  label,\n  labelProps,\n  ...checkboxProps\n}: YBCheckboxProps) => {\n  return (\n    <FormControlLabel\n      control={<Checkbox color=\"primary\" {...checkboxProps} />}\n      label={\n        <Typography component=\"span\" variant=\"body2\" {...labelProps}>\n          {label}\n        </Typography>\n      }\n    />\n  );\n};\n"],"names":["CheckBoxOutlineBlankIcon","createSvgIcon","React.createElement","CheckBoxIcon","IndeterminateCheckBoxIcon","styles","theme","alpha","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox","React.forwardRef","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIconProp","inputProps","_props$size","size","other","_objectWithoutProperties","icon","indeterminateIcon","SwitchBase","_extends","clsx","capitalize","React.cloneElement","Checkbox$2","withStyles","YBCheckbox","label","labelProps","checkboxProps","jsx","FormControlLabel","Typography"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}