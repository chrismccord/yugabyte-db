{"version":3,"file":"YBToggle.stories-1c4c6410.js","sources":["../../managed/ui/node_modules/@material-ui/core/esm/Switch/Switch.js","../../managed/ui/src/redesign/components/YBToggle/YBToggle.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import { FC } from 'react';\nimport {\n  makeStyles,\n  FormControl,\n  Typography,\n  Switch,\n  FormControlLabel,\n  withStyles,\n  Theme,\n  createStyles,\n  TypographyVariant,\n  SwitchProps,\n  InputProps\n} from '@material-ui/core';\n\nconst AntSwitch = withStyles((theme: Theme) => {\n  return createStyles({\n    root: {\n      width: 42,\n      height: 24,\n      marginRight: 8,\n      padding: 0,\n      overflow: 'visible',\n      display: 'flex'\n    },\n    switchBase: {\n      padding: `${theme.spacing(0.5)}px !important`,\n      color: theme.palette.common.white,\n      '&$checked': {\n        transform: 'translateX(17px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          opacity: 1,\n          backgroundColor: theme.palette.orange[500],\n          borderColor: theme.palette.orange[500]\n        }\n      }\n    },\n    thumb: {\n      width: 16,\n      height: 16,\n      boxShadow: 'none',\n      color: theme.palette.common.white\n    },\n    track: {\n      border: `1px solid ${theme.palette.grey[500]}`,\n      borderRadius: 22 / 2,\n      opacity: 1,\n      backgroundColor: theme.palette.grey[500]\n    },\n    checked: {}\n  });\n})(Switch);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: 0\n  },\n  label: {\n    ...theme.typography.body2\n  }\n}));\n\ninterface ToggleFormControlProps {\n  fullWidth?: boolean;\n  error?: boolean;\n}\n\nexport interface YBToggleProps extends SwitchProps {\n  label?: string;\n  labelVariant?: TypographyVariant;\n  FormControlProps?: ToggleFormControlProps;\n  inputProps?: InputProps['inputProps'];\n}\n\nexport const YBToggle: FC<YBToggleProps> = ({\n  label,\n  labelVariant,\n  FormControlProps,\n  ...props\n}: YBToggleProps) => {\n  const formLabelClasses = useStyles();\n  return (\n    <FormControl {...FormControlProps}>\n      <FormControlLabel\n        control={<AntSwitch color=\"primary\" {...props} />}\n        labelPlacement=\"end\"\n        label={<Typography variant={labelVariant ?? 'body2'}>{label}</Typography>}\n        classes={formLabelClasses}\n      />\n    </FormControl>\n  );\n};\n"],"names":["styles","theme","alpha","Switch","React.forwardRef","props","ref","classes","className","_props$color","color","_props$edge","edge","_props$size","size","other","_objectWithoutProperties","icon","React.createElement","clsx","capitalize","SwitchBase","_extends","Switch$1","withStyles","AntSwitch","createStyles","useStyles","makeStyles","YBToggle","label","labelVariant","FormControlProps","formLabelClasses","jsx","FormControl","FormControlLabel","Typography"],"mappings":"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","x_google_ignoreList":[0]}