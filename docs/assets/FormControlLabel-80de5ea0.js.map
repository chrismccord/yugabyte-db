{"version":3,"file":"FormControlLabel-80de5ea0.js","sources":["../../managed/ui/node_modules/@material-ui/core/esm/internal/SwitchBase.js","../../managed/ui/node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);"],"names":["styles","SwitchBase","React.forwardRef","props","ref","autoFocus","checkedProp","checkedIcon","classes","className","defaultChecked","disabledProp","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","_useControlled","useControlled","_useControlled2","_slicedToArray","checked","setCheckedState","muiFormControl","useFormControl","handleFocus","event","handleBlur","handleInputChange","newChecked","disabled","hasLabelFor","React.createElement","IconButton","_extends","clsx","SwitchBase$1","withStyles","theme","FormControlLabel","control","label","_props$labelPlacement","labelPlacement","controlProps","key","capitalize","React.cloneElement","Typography","FormControlLabel$1"],"mappings":"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","x_google_ignoreList":[0,1]}