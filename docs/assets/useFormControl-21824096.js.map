{"version":3,"file":"useFormControl-21824096.js","sources":["../../managed/ui/node_modules/@material-ui/core/esm/utils/useControlled.js","../../managed/ui/node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","../../managed/ui/node_modules/@material-ui/core/esm/FormControl/useFormControl.js"],"sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}"],"names":["useControlled","_ref","controlled","defaultProp","_React$useRef","React.useRef","isControlled","_React$useState","React.useState","valueState","setValue","value","setValueIfUncontrolled","React.useCallback","newValue","FormControlContext","React.createContext","useFormControl","React.useContext","FormControlContext$1"],"mappings":"wCAEe,SAASA,EAAcC,EAAM,CACvC,IAACC,EAAaD,EAAK,WAClBE,EAAcF,EAAK,QACZA,EAAK,KACCA,EAAK,MAGtB,IAAIG,EAAgBC,EAAAA,OAAaH,IAAe,MAAS,EACrDI,EAAeF,EAAc,QAE7BG,EAAkBC,EAAc,SAACL,CAAW,EAC5CM,EAAaF,EAAgB,CAAC,EAC9BG,EAAWH,EAAgB,CAAC,EAE5BI,EAAQL,EAAeJ,EAAaO,EAmBpCG,EAAyBC,cAAkB,SAAUC,EAAU,CAC5DR,GACHI,EAASI,CAAQ,CAEpB,EAAE,CAAE,CAAA,EACL,MAAO,CAACH,EAAOC,CAAsB,CACvC,CCpCA,IAAIG,EAAqBC,EAAmB,cAAA,EAMrC,SAASC,GAAiB,CAC/B,OAAOC,EAAAA,WAAiBH,CAAkB,CAC5C,CACA,MAAAI,EAAeJ,ECZA,SAASE,GAAiB,CACvC,OAAOC,EAAAA,WAAiBH,CAAkB,CAC5C","x_google_ignoreList":[0,1,2]}