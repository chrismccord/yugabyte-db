{"version":3,"file":"Typography-ee7f0f8e.js","sources":["../../managed/ui/node_modules/@material-ui/core/esm/Typography/Typography.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"names":["styles","theme","defaultVariantMapping","Typography","React.forwardRef","props","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","React.createElement","_extends","clsx","capitalize","Typography$1","withStyles"],"mappings":"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","x_google_ignoreList":[0]}