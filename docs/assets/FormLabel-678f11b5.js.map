{"version":3,"file":"FormLabel-678f11b5.js","sources":["../../managed/ui/node_modules/@material-ui/core/esm/FormControl/formControlState.js","../../managed/ui/node_modules/@material-ui/core/esm/FormLabel/FormLabel.js"],"sourcesContent":["export default function formControlState(_ref) {\n  var props = _ref.props,\n      states = _ref.states,\n      muiFormControl = _ref.muiFormControl;\n  return states.reduce(function (acc, state) {\n    acc[state] = props[state];\n\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n\n    return acc;\n  }, {});\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.body1, {\n      lineHeight: 1,\n      padding: 0,\n      '&$focused': {\n        color: theme.palette.primary.main\n      },\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {\n      '&$focused': {\n        color: theme.palette.secondary.main\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Styles applied to the asterisk element. */\n    asterisk: {\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }\n  };\n};\nvar FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'label' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      required = props.required,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required),\n    ref: ref\n  }, other), children, fcs.required && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    className: clsx(classes.asterisk, fcs.error && classes.error)\n  }, \"\\u2009\", '*'));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormLabel'\n})(FormLabel);"],"names":["formControlState","_ref","props","states","muiFormControl","acc","state","styles","theme","_extends","FormLabel","React.forwardRef","ref","children","classes","className","_props$component","Component","other","_objectWithoutProperties","useFormControl","fcs","React.createElement","clsx","capitalize","FormLabel$1","withStyles"],"mappings":"gQAAe,SAASA,EAAiBC,EAAM,CAC7C,IAAIC,EAAQD,EAAK,MACbE,EAASF,EAAK,OACdG,EAAiBH,EAAK,eAC1B,OAAOE,EAAO,OAAO,SAAUE,EAAKC,EAAO,CACzC,OAAAD,EAAIC,CAAK,EAAIJ,EAAMI,CAAK,EAEpBF,GACE,OAAOF,EAAMI,CAAK,EAAM,MAC1BD,EAAIC,CAAK,EAAIF,EAAeE,CAAK,GAI9BD,CACR,EAAE,CAAE,CAAA,CACP,CCNO,IAAIE,EAAS,SAAgBC,EAAO,CACzC,MAAO,CAEL,KAAMC,EAAS,CACb,MAAOD,EAAM,QAAQ,KAAK,SAChC,EAAOA,EAAM,WAAW,MAAO,CACzB,WAAY,EACZ,QAAS,EACT,YAAa,CACX,MAAOA,EAAM,QAAQ,QAAQ,IAC9B,EACD,aAAc,CACZ,MAAOA,EAAM,QAAQ,KAAK,QAC3B,EACD,UAAW,CACT,MAAOA,EAAM,QAAQ,MAAM,IAC5B,CACP,CAAK,EAGD,eAAgB,CACd,YAAa,CACX,MAAOA,EAAM,QAAQ,UAAU,IAChC,CACF,EAGD,QAAS,CAAE,EAGX,SAAU,CAAE,EAGZ,MAAO,CAAE,EAGT,OAAQ,CAAE,EAGV,SAAU,CAAE,EAGZ,SAAU,CACR,UAAW,CACT,MAAOA,EAAM,QAAQ,MAAM,IAC5B,CACF,CACL,CACA,EACIE,EAAyBC,EAAAA,WAAiB,SAAmBT,EAAOU,EAAK,CACxE,IAACC,EAAWX,EAAM,SACjBY,EAAUZ,EAAM,QAChBa,EAAYb,EAAM,UACVA,EAAM,MACpB,IAAMc,EAAmBd,EAAM,UACzBe,EAAYD,IAAqB,OAAS,QAAUA,EACzCd,EAAM,SACTA,EAAM,MACLA,EAAM,OACLA,EAAM,QACLA,EAAM,SACjB,IAAAgB,EAAQC,EAAyBjB,EAAO,CAAC,WAAY,UAAW,YAAa,QAAS,YAAa,WAAY,QAAS,SAAU,UAAW,UAAU,CAAC,EAExJE,EAAiBgB,IACjBC,EAAMrB,EAAiB,CACzB,MAAOE,EACP,eAAgBE,EAChB,OAAQ,CAAC,QAAS,WAAY,UAAW,WAAY,QAAS,QAAQ,CAC1E,CAAG,EACD,OAAoBkB,EAAmB,cAACL,EAAWR,EAAS,CAC1D,UAAWc,EAAKT,EAAQ,KAAMA,EAAQ,QAAQ,OAAOU,EAAWH,EAAI,OAAS,SAAS,CAAC,CAAC,EAAGN,EAAWM,EAAI,UAAYP,EAAQ,SAAUO,EAAI,OAASP,EAAQ,MAAOO,EAAI,QAAUP,EAAQ,OAAQO,EAAI,SAAWP,EAAQ,QAASO,EAAI,UAAYP,EAAQ,QAAQ,EAClQ,IAAKF,CACT,EAAKM,CAAK,EAAGL,EAAUQ,EAAI,UAAyBC,EAAmB,cAAC,OAAQ,CAC5E,cAAe,GACf,UAAWC,EAAKT,EAAQ,SAAUO,EAAI,OAASP,EAAQ,KAAK,CAChE,EAAK,IAAU,GAAG,CAAC,CACnB,CAAC,EA6DD,MAAeW,EAAAC,EAAWnB,EAAQ,CAChC,KAAM,cACR,CAAC,EAAEG,CAAS","x_google_ignoreList":[0,1]}